# Generated by Django 3.2.9 on 2021-12-09 13:50

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('oauth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Festival',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('tag_line', models.CharField(blank=True, max_length=128, null=True)),
                ('photo', versatileimagefield.fields.VersatileImageField(upload_to='festival')),
                ('about', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('slug', models.SlugField(help_text='This will be used as URL. /festivals/slug', unique=True)),
                ('link', models.URLField(blank=True, default=None, help_text='Override default generated URL (useful for festival having separate website)', null=True)),
                ('published', models.BooleanField(default=False)),
                ('use_custom_html', models.BooleanField(default=False, help_text='Select if you want custom page')),
                ('custom_html', models.FileField(blank=True, null=True, upload_to='html_templates', verbose_name='Custom HTML')),
                ('custom_css', models.FileField(blank=True, null=True, upload_to='css', verbose_name='Custom CSS')),
                ('custom_js', models.FileField(blank=True, null=True, upload_to='js', verbose_name='Custom JS')),
                ('society', models.ManyToManyField(blank=True, to='main.Society')),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media', models.CharField(choices=[('FB', 'Facebook'), ('TW', 'Twitter'), ('LI', 'LinkedIn'), ('GP', 'Google Plus'), ('IG', 'Instagram'), ('YT', 'YouTube')], max_length=2)),
                ('link', models.URLField()),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='festivals.festival')),
            ],
            options={
                'ordering': ['social_media'],
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('cover', versatileimagefield.fields.VersatileImageField(blank=True, upload_to='festival_event_category')),
                ('slug', models.SlugField(unique=True)),
                ('about', ckeditor_uploader.fields.RichTextUploadingField()),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='festivals.festival')),
            ],
            options={
                'verbose_name': 'Festival Event Category',
                'verbose_name_plural': 'Festival Event Categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('slug', models.SlugField(unique=True)),
                ('unique_id', models.CharField(max_length=8, unique=True)),
                ('about', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='About')),
                ('pdf', models.FileField(blank=True, null=True, upload_to='pdf')),
                ('cover', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='event')),
                ('location', models.CharField(blank=True, max_length=64)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('register', models.URLField(blank=True, help_text='Registration URL')),
                ('max_team_size', models.PositiveSmallIntegerField(default=1, help_text='Leave 1 for single participant event')),
                ('min_team_size', models.PositiveSmallIntegerField(default=1, help_text='Leave 1 for single participant event')),
                ('published', models.BooleanField(default=True)),
                ('event_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='festivals.eventcategory')),
                ('organizers', models.ManyToManyField(blank=True, help_text="First organizer's detail will show in default event page.", to='oauth.UserProfile')),
            ],
            options={
                'verbose_name': 'Festival Event',
                'verbose_name_plural': 'Festival Events',
                'ordering': ('timestamp',),
            },
        ),
    ]
