# Generated by Django 3.2.9 on 2021-12-09 13:50

import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('photologue', '0012_alter_watermark_image'),
        ('oauth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('ctype', models.CharField(choices=[('C', 'Club'), ('T', 'Team')], default='C', help_text='Specify type as Club or Team.', max_length=1, verbose_name='Type')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('cover', versatileimagefield.fields.VersatileImageField(blank=True, help_text='Upload high quality picture', null=True, upload_to='club_%Y')),
                ('skin', models.CharField(blank=True, choices=[('white-skin', 'White'), ('black-skin', 'Black'), ('cyan-skin', 'Cyan'), ('mdb-skin', 'MDB'), ('deep-purple-skin', 'Deep Purple'), ('navy-blue-skin', 'Navy Blue'), ('pink-skin', 'Pink'), ('indigo-skin', 'Indigo'), ('light-blue-skin', 'Light Blue'), ('grey-skin', 'Grey')], default='mdb-skin', help_text='Choose a skin while displaying club page.', max_length=32)),
                ('resources_link', models.URLField(blank=True, default=None, null=True)),
                ('custom_html', models.TextField(blank=True, default=None, help_text='Add custom HTML to view on club page.', null=True)),
                ('slug', models.SlugField(help_text='This will be used as URL. /club/slug', unique=True)),
                ('published', models.BooleanField(default=False)),
                ('captain', models.ForeignKey(blank=True, limit_choices_to={'user__is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='captain', to='oauth.userprofile')),
                ('core_members', models.ManyToManyField(blank=True, to='oauth.UserProfile')),
                ('gallery', models.ForeignKey(blank=True, help_text='Select a gallery to link to this club.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.gallery')),
                ('mentor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cmentor', to='oauth.userprofile')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{10}$', message='Not a valid number!')])),
                ('subject', models.CharField(max_length=128)),
                ('message', models.TextField(max_length=2048)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FacultyAdvisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('avatar', versatileimagefield.fields.VersatileImageField(upload_to='avatar')),
            ],
        ),
        migrations.CreateModel(
            name='Senate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('cover', versatileimagefield.fields.VersatileImageField(help_text='Upload high quality picture', upload_to='society_%Y', verbose_name='Cover')),
                ('skin', models.CharField(blank=True, choices=[('white-skin', 'White'), ('black-skin', 'Black'), ('cyan-skin', 'Cyan'), ('mdb-skin', 'MDB'), ('deep-purple-skin', 'Deep Purple'), ('navy-blue-skin', 'Navy Blue'), ('pink-skin', 'Pink'), ('indigo-skin', 'Indigo'), ('light-blue-skin', 'Light Blue'), ('grey-skin', 'Grey')], default='mdb-skin', help_text='Choose a skin while displaying senate page.', max_length=32)),
                ('report_link', models.URLField(blank=True, help_text='Add a drive link to show on senate page', null=True)),
                ('custom_html', models.TextField(blank=True, default=None, help_text='Add custom HTML to view on society page.', null=True)),
                ('slug', models.SlugField(help_text='This will be used as URL. /senate/slug', unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('year', models.CharField(choices=[('2008', 2008), ('2009', 2009), ('2010', 2010), ('2011', 2011), ('2012', 2012), ('2013', 2013), ('2014', 2014), ('2015', 2015), ('2016', 2016), ('2017', 2017), ('2018', 2018), ('2019', 2019), ('2020', 2020), ('2021', 2021), ('2022', 2022)], max_length=4, validators=[django.core.validators.RegexValidator('^[0-9]{4}$', message='Not a valid year!')])),
                ('coordinator_student', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.facultyadvisor')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('cover', versatileimagefield.fields.VersatileImageField(help_text='Upload high quality picture', upload_to='society_%Y', verbose_name='Cover')),
                ('skin', models.CharField(blank=True, choices=[('white-skin', 'White'), ('black-skin', 'Black'), ('cyan-skin', 'Cyan'), ('mdb-skin', 'MDB'), ('deep-purple-skin', 'Deep Purple'), ('navy-blue-skin', 'Navy Blue'), ('pink-skin', 'Pink'), ('indigo-skin', 'Indigo'), ('light-blue-skin', 'Light Blue'), ('grey-skin', 'Grey')], default='mdb-skin', help_text='Choose a skin while displaying society page.', max_length=32)),
                ('report_link', models.URLField(blank=True, help_text='Add a drive link to show on society page', null=True)),
                ('custom_html', models.TextField(blank=True, default=None, help_text='Add custom HTML to view on society page.', null=True)),
                ('slug', models.SlugField(help_text='This will be used as URL. /society/slug', unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('year', models.CharField(choices=[('2008', 2008), ('2009', 2009), ('2010', 2010), ('2011', 2011), ('2012', 2012), ('2013', 2013), ('2014', 2014), ('2015', 2015), ('2016', 2016), ('2017', 2017), ('2018', 2018), ('2019', 2019), ('2020', 2020), ('2021', 2021), ('2022', 2022)], max_length=4, validators=[django.core.validators.RegexValidator('^[0-9]{4}$', message='Not a valid year!')])),
                ('faculty_advisor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.facultyadvisor')),
                ('gallery', models.ForeignKey(blank=True, help_text='Select a carousel gallery to link to this society.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.gallery')),
                ('joint_secretary', models.ForeignKey(blank=True, limit_choices_to={'user__is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='joint_secy', to='oauth.userprofile')),
                ('mentor', models.ForeignKey(blank=True, default=None, limit_choices_to={'user__is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='smentor', to='oauth.userprofile')),
                ('secretary', models.ForeignKey(blank=True, limit_choices_to={'user__is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secy', to='oauth.userprofile')),
            ],
            options={
                'verbose_name_plural': 'Societies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media', models.CharField(choices=[('FB', 'Facebook'), ('TW', 'Twitter'), ('LI', 'LinkedIn'), ('GP', 'Google Plus'), ('IG', 'Instagram'), ('GH', 'GitHub'), ('YT', 'YouTube')], max_length=2)),
                ('link', models.URLField()),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.club')),
            ],
            options={
                'ordering': ['social_media'],
            },
        ),
        migrations.CreateModel(
            name='SenateMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('SECY', 'Student Secretary'), ('SER', 'Student Elected Representative')], max_length=5)),
                ('year', models.CharField(choices=[('1', 'First Year'), ('2', 'Second Year'), ('3', 'Third Year'), ('4', 'Fourth Year')], max_length=1)),
                ('senate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.senate')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oauth.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='senate',
            name='members',
            field=models.ManyToManyField(through='main.SenateMembership', to='oauth.UserProfile'),
        ),
        migrations.AddField(
            model_name='club',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.society'),
        ),
        migrations.AddField(
            model_name='club',
            name='vice_captain_one',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to={'user__is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vice_cap_one', to='oauth.userprofile'),
        ),
        migrations.AddField(
            model_name='club',
            name='vice_captain_three',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to={'user__is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vice_cap_three', to='oauth.userprofile'),
        ),
        migrations.AddField(
            model_name='club',
            name='vice_captain_two',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to={'user__is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vice_cap_two', to='oauth.userprofile'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('custom_html', models.TextField(blank=True, default=None, null=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.club')),
            ],
            options={
                'verbose_name_plural': 'Activities',
            },
        ),
    ]
